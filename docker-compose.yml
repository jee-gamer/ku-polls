services:
  db:
    image: "postgres:17"
    healthcheck:
      test: [
        "CMD-SHELL",
        "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"
      ]
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    env_file:
      - docker.env
    environment:
      POSTGRES_USER: "${DATABASE_USERNAME?:DATABASE_USERNAME not set}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD?:DATABASE_PASSWORD not set}"
      POSTGRES_DB: "polls"
    volumes:
      - ./db:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 1gb

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SECRET_KEY: "${SECRET_KEY?:SECRET_KEY not set}"
    command:
      - /bin/sh
      - -c
      - |
        python manage.py migrate
        python manage.py loaddata data/users.json
        python manage.py loaddata data/polls-v4.json
        python manage.py loaddata data/votes-v4.json
        python manage.py runserver 0.0.0.0:8000
    env_file:
      - docker.env
    environment:
      SECRET_KEY: "${SECRET_KEY?:SECRET_KEY not set}"
      DATABASE_HOST: db
      DATABASE_PORT: 5432
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8001:8000'
    deploy:
      resources:
        limits:
          memory: 256mb